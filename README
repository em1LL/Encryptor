- Программа должна успешно подвергаться изменениям со стороны других разработчиков, т.е. быть легко понимаемой, расширяемой и ясной
- Программа должна иметь чёткие требования к Code Style (расположение заголовочных файлов в опр. порядке, единый принцип именования переменных)
- Код не должен содержать функций, кол-во строк которых превышает больше 100, если того не требует действительно сложный алгоритм
- Осмысленные имена переменных, даже в ущерб длине названия
- Код должен быть кросс-платформенным настолько, насколько это только возможно
- Макс. возможное использование фич, предоставляемых C++11 ради обеспечения более читаемого кода (auto, delete, override, final, range-based for и т.д.)
- Краткость кода - не всегда самое лучшее решение. Если какой-то цикл или операцию можно расписать неск., но более понятными - следует использовать именно второй вариант
- Не изобретать велосипед! Использовать готовые решения из успешных продуктов наподобие boost
- Использование стандартных алгоритмов вместо самостоятельно написанных (примером может служить функция-член find стандартных контйнеров из STL вместо цикла)
- C++ способы решения проблем вместо C
- Не выводить сообщения об ошибках в stdout - использовать для этих целей только stderr, если пользователь не потребует иного
- Комментарии должны оставлять не менее 25% кода
- Комментарии оставлять на англ. языке